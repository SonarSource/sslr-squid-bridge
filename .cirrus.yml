---
gcp_credentials: |
  ENCRYPTED[!149d4005ecdba4cdd78bb5ba22756ebb98bf8e3367ee2e9ab08c5a1608c0d3e3b501904b67a1d67c0b63085e469d7dde!]

env:
  CIRRUS_CLONE_DEPTH: "20"
  # Possible values for ARTIFACTORY_DEPLOY_REPO: sonarsource-private-qa, sonarsource-public-qa
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa
  ARTIFACTORY_DEPLOY_USERNAME: vault-sonarsource-sslr-squid-bridge-qa-deployer
  # Use bash (instead of sh on linux or cmd.exe on windows)
  CIRRUS_SHELL: bash

vault: &VAULT
  vault_script:
    - vault.sh

container_definition: &CONTAINER_DEFINITION
  image: eu.gcr.io/release-engineering-ci-prod/base:j11-latest
  cluster_name: cirrus-ci
  zone: europe-west4-b
  namespace: default

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: >
    $CIRRUS_USER_COLLABORATOR == 'true' &&
    $CIRRUS_TAG == "" &&
    ($CIRRUS_PR != "" ||
      $CIRRUS_BRANCH == "master" ||
      $CIRRUS_BRANCH =~ "branch-.*" ||
      $CIRRUS_BRANCH =~ "dogfood-on-.*"
    )

build_task:
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 2
    memory: 2G
  env:
    # analysis on next
    SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
    # allow deployment of pull request artifacts to repox
    DEPLOY_PULL_REQUEST: "true"
  <<: [*VAULT, *ONLY_SONARSOURCE_QA]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  build_script:
    - source cirrus-env BUILD
    - regular_mvn_build_deploy_analyze
  cleanup_before_cache_script: cleanup_maven_repository

promote_task:
  depends_on:
    - build
  gke_container:
    <<: *CONTAINER_DEFINITION
    cpu: 0.5
    memory: 500M
  env:
    # artifacts that will have downloadable links in burgr
    ARTIFACTS: 'org.sonarsource.sslr-squid-bridge:sslr-squid-bridge:jar'
  <<: [*VAULT, *ONLY_SONARSOURCE_QA]
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script: cirrus_promote_maven
  cleanup_before_cache_script: cleanup_maven_repository
